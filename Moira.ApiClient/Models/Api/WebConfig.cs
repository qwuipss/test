// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace Moira.ApiClient.Models.Api
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class WebConfig : IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The contacts property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Moira.ApiClient.Models.Api.WebContact>? Contacts { get; set; }
#nullable restore
#else
        public List<global::Moira.ApiClient.Models.Api.WebContact> Contacts { get; set; }
#endif
        /// <summary>The featureFlags property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Moira.ApiClient.Models.Api.FeatureFlags? FeatureFlags { get; set; }
#nullable restore
#else
        public global::Moira.ApiClient.Models.Api.FeatureFlags FeatureFlags { get; set; }
#endif
        /// <summary>The metric_source_clusters property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::Moira.ApiClient.Models.Api.MetricSourceCluster>? MetricSourceClusters { get; set; }
#nullable restore
#else
        public List<global::Moira.ApiClient.Models.Api.MetricSourceCluster> MetricSourceClusters { get; set; }
#endif
        /// <summary>The remoteAllowed property</summary>
        public bool? RemoteAllowed { get; set; }
        /// <summary>The sentry property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::Moira.ApiClient.Models.Api.Sentry? Sentry { get; set; }
#nullable restore
#else
        public global::Moira.ApiClient.Models.Api.Sentry Sentry { get; set; }
#endif
        /// <summary>The supportEmail property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SupportEmail { get; set; }
#nullable restore
#else
        public string SupportEmail { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::Moira.ApiClient.Models.Api.WebConfig"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::Moira.ApiClient.Models.Api.WebConfig CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::Moira.ApiClient.Models.Api.WebConfig();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "contacts", n => { Contacts = n.GetCollectionOfObjectValues<global::Moira.ApiClient.Models.Api.WebContact>(global::Moira.ApiClient.Models.Api.WebContact.CreateFromDiscriminatorValue)?.AsList(); } },
                { "featureFlags", n => { FeatureFlags = n.GetObjectValue<global::Moira.ApiClient.Models.Api.FeatureFlags>(global::Moira.ApiClient.Models.Api.FeatureFlags.CreateFromDiscriminatorValue); } },
                { "metric_source_clusters", n => { MetricSourceClusters = n.GetCollectionOfObjectValues<global::Moira.ApiClient.Models.Api.MetricSourceCluster>(global::Moira.ApiClient.Models.Api.MetricSourceCluster.CreateFromDiscriminatorValue)?.AsList(); } },
                { "remoteAllowed", n => { RemoteAllowed = n.GetBoolValue(); } },
                { "sentry", n => { Sentry = n.GetObjectValue<global::Moira.ApiClient.Models.Api.Sentry>(global::Moira.ApiClient.Models.Api.Sentry.CreateFromDiscriminatorValue); } },
                { "supportEmail", n => { SupportEmail = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfObjectValues<global::Moira.ApiClient.Models.Api.WebContact>("contacts", Contacts);
            writer.WriteObjectValue<global::Moira.ApiClient.Models.Api.FeatureFlags>("featureFlags", FeatureFlags);
            writer.WriteCollectionOfObjectValues<global::Moira.ApiClient.Models.Api.MetricSourceCluster>("metric_source_clusters", MetricSourceClusters);
            writer.WriteBoolValue("remoteAllowed", RemoteAllowed);
            writer.WriteObjectValue<global::Moira.ApiClient.Models.Api.Sentry>("sentry", Sentry);
            writer.WriteStringValue("supportEmail", SupportEmail);
        }
    }
}
#pragma warning restore CS0618
