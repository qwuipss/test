name: Create Release and Publish package

on:
  push:
    tags: "v[0-9]+\.[0-9]+\.[0-9]+"

jobs:
  create-release-and-publish:
    runs-on: ubuntu-22.04
    steps:
      - name: Check workflow run ref
        run: |
          echo $RUN_REF
          if [ "$RUN_REF" != "refs/heads/main" ]; then
            echo Workflow should only be run on main branch. Workflow aborted.
            exit 1
          fi
        env:
          RUN_REF: ${{ github.ref }}

#      - uses: actions/checkout@v4
#
#      - name: Check Version Tag format
#        if: github.event_name != 'workflow_dispatch'
#        run: |
#          if [[ ! $VERSION_TAG =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
#            echo Version Tag \"$VERSION_TAG\" does not match regular expression \"^[0-9]+\.[0-9]+\.[0-9]+$\". Workflow aborted.
#            exit 1
#          fi
#        env:
#          VERSION_TAG: ${{ github.event.inputs.version_tag }}
#
#      - name: Check for open Pull requests
#        run: |
#          PULLS=$(gh api \
#            -H "Accept: application/vnd.github+json" \
#            -H "X-GitHub-Api-Version: 2022-11-28" \
#            /repos/$GITHUB_REPOSITORY/pulls)
#          if [ "$PULLS" != "[]" ]; then
#            echo Open Pull requests found. Workflow aborted.
#            exit 1
#          fi
#        env:
#          GH_TOKEN: ${{ github.token }}
#
#      - name: Set .csproj version
#        run: sed -i -E "s/(\s*)<Version>[0-9]+\.[0-9]+\.[0-9]+<\/Version>/\1<Version>$VERSION_TAG<\/Version>/g" ./Moira.ApiClient/Moira.ApiClient.csproj
#        env:
#          VERSION_TAG: ${{ github.event.inputs.version_tag }}
#
#      - uses: actions/setup-dotnet@v4
#        with:
#          dotnet-version: 8.0.x
#
#      - name: Restore packages
#        run: dotnet restore
#
#      - name: Build solution
#        run: dotnet build Moira.ApiClient.sln --configuration Release
#
#      - name: Create temp directory
#        run: mkdir ./.temp/
#
#      - name: Pack solution
#        run: dotnet pack --no-build --configuration Release --output ./.temp/
#
#      - name: Create GitHub release
#        run: gh release create v$VERSION_TAG --title v$VERSION_TAG --verify-tag
#        env:
#          GH_TOKEN: ${{ github.token }}
#          VERSION_TAG: ${{ github.event.inputs.version_tag }}
#
#      - name: Push package to NuGet.org
#        run: dotnet nuget push ./.temp/Moira.ApiClient.$VERSION_TAG.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json
#        env:
#          VERSION_TAG: ${{ github.event.inputs.version_tag }}
#          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}