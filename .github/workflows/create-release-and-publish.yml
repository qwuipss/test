name: Create Release and Publish package

on:
  workflow_dispatch:
    inputs:
      version_tag:
        description: "Version Tag (format: major.minor.patch)"
        required: true

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Check Version Tag format
        run: |
          if [[ ! $VERSION_TAG =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo Version Tag \"$VERSION_TAG\" does not match the regular expression \"^[0-9]+\.[0-9]+\.[0-9]+$\". Workflow aborted.
            exit 1
          fi
        env:
          VERSION_TAG: ${{ github.event.inputs.version_tag }}

      - name: Check for open Pull requests
        run: |
          pulls=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/qwuipss/test/pulls)
          if [ "$pulls" != "[]" ]; then
            echo Open Pull requests found. Workflow aborted.
            exit 1
          fi
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Set .csproj version
        run: sed -i -E "s/(\s*)<Version>[0-9]+\.[0-9]+\.[0-9]+<\/Version>/\1<Version>$VERSION_TAG<\/Version>/g" ./Moira.ApiClient/Moira.ApiClient.csproj
        env:
          VERSION_TAG: ${{ github.event.inputs.version_tag }}

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore packages
        run: dotnet restore

      - name: Build solution
        run: dotnet build Moira.ApiClient.sln --configuration Release

      - name: Create temp directory
        run: mkdir ./.temp/

      - name: Pack solution
        run: dotnet pack --no-build --configuration Release --output ./.temp/

      - name: Create GitHub release
        run: gh release create v$VERSION_TAG --title v$VERSION_TAG --verify-tag
        env:
          GH_TOKEN: ${{ github.token }}
          VERSION_TAG: ${{ github.event.inputs.version_tag }}

      - name: Push package to NuGet.org
        run: dotnet nuget push ./.temp/Moira.ApiClient.$VERSION_TAG.nupkg --api-key $NUGET_API_KEY --source https://api.nuget.org/v3/index.json
        env:
          VERSION_TAG: ${{ github.event.inputs.version_tag }}
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}